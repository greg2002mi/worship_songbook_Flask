<div class="col-4"><h4><strong>Audio</strong></h4><br>
	{% for a in media %}
      {% if a.mtype == 2 %}
	  <div>
        <h5>{{ a.filename }}</h5>
        <audio id="audioPlayer{{ a.id }}" src="{{ a.murl }}"></audio>
        <input type="range" id="volumeSlider{{ a.id }}" min="0" max="1" step="0.1" value="1" onchange="changeVolume({{ a.id }}, this.value)">
        <button onclick="playSong({{ a.id }})">Play</button>
        <button onclick="stopSong({{ a.id }})">Stop</button>
        <div>
          <span id="currentTime{{ a.id }}">0:00</span> / <span id="duration{{ a.id }}">0:00</span>
        </div>
        <input type="range" id="tracker{{ a.id }}" min="0" max="100" step="0.1" value="0" oninput="seekSong({{ a.id }}, this.value)" onchange="seekSong({{ a.id }}, this.value)">
      </div>
	{% endif %}
	{% endfor %}
	</div>
	<script>
  var sounds = {};
  var currentSongId;

  function playSong(songId) {
    if (currentSongId !== songId) {
      stopCurrentSong();
      currentSongId = songId;
      var audioPlayer = document.getElementById('audioPlayer' + songId);
      var volumeSlider = document.getElementById('volumeSlider' + songId);
      var tracker = document.getElementById('tracker' + songId);
      var currentTime = document.getElementById('currentTime' + songId);
      var duration = document.getElementById('duration' + songId);

      sounds[songId] = new Howl({
        src: [audioPlayer.src],
        html5: true,
        volume: volumeSlider.value,
        onplay: function() {
          requestAnimationFrame(updateTracker.bind(null, songId, tracker, currentTime, duration));
        },
        onend: function() {
          currentSongId = null;
        }
      });
      
      sounds[songId].play();
    } else if (sounds[songId] && !sounds[songId].playing()) {
      sounds[songId].play();
    }
  }

  function stopCurrentSong() {
    if (currentSongId) {
      if (sounds[currentSongId] && sounds[currentSongId].playing()) {
        sounds[currentSongId].stop();
      }
      currentSongId = null;
    }
  }

  function stopSong(songId) {
    if (currentSongId === songId) {
      stopCurrentSong();
    } else if (sounds[songId] && sounds[songId].playing()) {
      sounds[songId].stop();
    }
  }

  function changeVolume(songId, value) {
    if (sounds[songId]) {
      sounds[songId].volume(value);
    }
  }

  function seekSong(songId, value) {
    if (sounds[songId]) {
      var duration = sounds[songId].duration();
      sounds[songId].seek(value / 100 * duration);
    }
  }

  function updateTracker(songId, tracker, currentTime, duration) {
    if (sounds[songId]) {
      var seek = sounds[songId].seek();
      var totalDuration = sounds[songId].duration();
      tracker.value = (seek / totalDuration) * 100;

      currentTime.textContent = formatTime(seek);
      duration.textContent = formatTime(totalDuration);

      if (sounds[songId].playing()) {
        requestAnimationFrame(updateTracker.bind(null, songId, tracker, currentTime, duration));
      }
    }
  }

  function formatTime(time) {
    var minutes = Math.floor(time / 60);
    var seconds = Math.floor(time % 60);
    seconds = seconds < 10 ? '0' + seconds : seconds;
    return minutes + ':' + seconds;
  }
</script>